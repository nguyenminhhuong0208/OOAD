{"ast":null,"code":"const eq = require('./eq');\nconst neq = require('./neq');\nconst gt = require('./gt');\nconst gte = require('./gte');\nconst lt = require('./lt');\nconst lte = require('./lte');\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version;\n      }\n      if (typeof b === 'object') {\n        b = b.version;\n      }\n      return a === b;\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version;\n      }\n      if (typeof b === 'object') {\n        b = b.version;\n      }\n      return a !== b;\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose);\n    case '!=':\n      return neq(a, b, loose);\n    case '>':\n      return gt(a, b, loose);\n    case '>=':\n      return gte(a, b, loose);\n    case '<':\n      return lt(a, b, loose);\n    case '<=':\n      return lte(a, b, loose);\n    default:\n      throw new TypeError(`Invalid operator: ${op}`);\n  }\n};\nmodule.exports = cmp;","map":{"version":3,"names":["eq","require","neq","gt","gte","lt","lte","cmp","a","op","b","loose","version","TypeError","module","exports"],"sources":["C:/Users/Admin/Favorites/OOAD/fontend/node_modules/semver/functions/cmp.js"],"sourcesContent":["const eq = require('./eq')\r\nconst neq = require('./neq')\r\nconst gt = require('./gt')\r\nconst gte = require('./gte')\r\nconst lt = require('./lt')\r\nconst lte = require('./lte')\r\n\r\nconst cmp = (a, op, b, loose) => {\r\n  switch (op) {\r\n    case '===':\r\n      if (typeof a === 'object') {\r\n        a = a.version\r\n      }\r\n      if (typeof b === 'object') {\r\n        b = b.version\r\n      }\r\n      return a === b\r\n\r\n    case '!==':\r\n      if (typeof a === 'object') {\r\n        a = a.version\r\n      }\r\n      if (typeof b === 'object') {\r\n        b = b.version\r\n      }\r\n      return a !== b\r\n\r\n    case '':\r\n    case '=':\r\n    case '==':\r\n      return eq(a, b, loose)\r\n\r\n    case '!=':\r\n      return neq(a, b, loose)\r\n\r\n    case '>':\r\n      return gt(a, b, loose)\r\n\r\n    case '>=':\r\n      return gte(a, b, loose)\r\n\r\n    case '<':\r\n      return lt(a, b, loose)\r\n\r\n    case '<=':\r\n      return lte(a, b, loose)\r\n\r\n    default:\r\n      throw new TypeError(`Invalid operator: ${op}`)\r\n  }\r\n}\r\nmodule.exports = cmp\r\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,MAAMC,GAAG,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC5B,MAAME,EAAE,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC1B,MAAMG,GAAG,GAAGH,OAAO,CAAC,OAAO,CAAC;AAC5B,MAAMI,EAAE,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC1B,MAAMK,GAAG,GAAGL,OAAO,CAAC,OAAO,CAAC;AAE5B,MAAMM,GAAG,GAAGA,CAACC,CAAC,EAAEC,EAAE,EAAEC,CAAC,EAAEC,KAAK,KAAK;EAC/B,QAAQF,EAAE;IACR,KAAK,KAAK;MACR,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAE;QACzBA,CAAC,GAAGA,CAAC,CAACI,OAAO;MACf;MACA,IAAI,OAAOF,CAAC,KAAK,QAAQ,EAAE;QACzBA,CAAC,GAAGA,CAAC,CAACE,OAAO;MACf;MACA,OAAOJ,CAAC,KAAKE,CAAC;IAEhB,KAAK,KAAK;MACR,IAAI,OAAOF,CAAC,KAAK,QAAQ,EAAE;QACzBA,CAAC,GAAGA,CAAC,CAACI,OAAO;MACf;MACA,IAAI,OAAOF,CAAC,KAAK,QAAQ,EAAE;QACzBA,CAAC,GAAGA,CAAC,CAACE,OAAO;MACf;MACA,OAAOJ,CAAC,KAAKE,CAAC;IAEhB,KAAK,EAAE;IACP,KAAK,GAAG;IACR,KAAK,IAAI;MACP,OAAOV,EAAE,CAACQ,CAAC,EAAEE,CAAC,EAAEC,KAAK,CAAC;IAExB,KAAK,IAAI;MACP,OAAOT,GAAG,CAACM,CAAC,EAAEE,CAAC,EAAEC,KAAK,CAAC;IAEzB,KAAK,GAAG;MACN,OAAOR,EAAE,CAACK,CAAC,EAAEE,CAAC,EAAEC,KAAK,CAAC;IAExB,KAAK,IAAI;MACP,OAAOP,GAAG,CAACI,CAAC,EAAEE,CAAC,EAAEC,KAAK,CAAC;IAEzB,KAAK,GAAG;MACN,OAAON,EAAE,CAACG,CAAC,EAAEE,CAAC,EAAEC,KAAK,CAAC;IAExB,KAAK,IAAI;MACP,OAAOL,GAAG,CAACE,CAAC,EAAEE,CAAC,EAAEC,KAAK,CAAC;IAEzB;MACE,MAAM,IAAIE,SAAS,CAAE,qBAAoBJ,EAAG,EAAC,CAAC;EAClD;AACF,CAAC;AACDK,MAAM,CAACC,OAAO,GAAGR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
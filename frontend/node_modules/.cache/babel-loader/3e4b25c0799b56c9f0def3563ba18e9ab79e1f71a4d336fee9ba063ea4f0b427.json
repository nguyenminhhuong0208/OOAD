{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Favorites\\\\OOAD\\\\fontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\n//import all_product from \"../Components/Assets/all_product\";\n//import CartItems from '../Components/CartItems/CartItems';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst jwt = require('jsonwebtoken');\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    //đổi all_product.length thành 300\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  // can access cartItems data in any component\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [username, setUsername] = useState(\"\"); // State để lưu trữ tên người dùng\n\n  useEffect(() => {\n    // Các thao tác khác trong useEffect\n\n    // Lấy tên người dùng từ localStorage sau khi đăng nhập thành công\n    const token = localStorage.getItem('auth-token');\n    if (token) {\n      const decodedToken = jwt.decode(token);\n      if (decodedToken && decodedToken.user && decodedToken.user.name) {\n        setUsername(decodedToken.user.name);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:4000/allproducts') //load product từ backend\n    .then(response => response.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setCartItems(data));\n    }\n  }, []);\n\n  //console.log(cartItems);\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    //console.log(cartItems); bỏ console đi thay bằng\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: Math.max(prev[itemId] - 1, 0)\n    }));\n    if (localStorage.getItem('auth-token')) {\n      //kết nối với database backend\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  {/*tính tổng giá các sản phẩm trong giỏ hàng */}\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  {/*hiển thị số sản phẩm trên biểu tượng giỏ hàng */}\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    username\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"VJNw+EpZVv4Lc7TENfvMI/U4wgg=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","jwt","require","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","username","setUsername","token","localStorage","getItem","decodedToken","decode","user","name","fetch","then","response","json","data","method","headers","Accept","body","addToCart","itemId","prev","JSON","stringify","console","log","removeFromCart","Math","max","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Favorites/OOAD/fontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\n//import all_product from \"../Components/Assets/all_product\";\r\n//import CartItems from '../Components/CartItems/CartItems';\r\nimport axios from 'axios';\r\nconst jwt = require('jsonwebtoken');\r\n\r\nexport const ShopContext = createContext(null);\r\nconst getDefaultCart = ()=>{\r\n    let cart = {};\r\n    for (let index = 0; index < 300+1; index++) { //đổi all_product.length thành 300\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\nconst ShopContextProvider = (props)=>{\r\n    const [all_product,setAll_Product]= useState([]);\r\n    // can access cartItems data in any component\r\n    const [cartItems,setCartItems] = useState(getDefaultCart());\r\n    const [username, setUsername] = useState(\"\"); // State để lưu trữ tên người dùng\r\n\r\n    useEffect(()=>{\r\n        // Các thao tác khác trong useEffect\r\n        \r\n        // Lấy tên người dùng từ localStorage sau khi đăng nhập thành công\r\n        const token = localStorage.getItem('auth-token');\r\n        if (token) {\r\n            const decodedToken = jwt.decode(token);\r\n            if (decodedToken && decodedToken.user && decodedToken.user.name) {\r\n                setUsername(decodedToken.user.name);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:4000/allproducts') //load product từ backend\r\n        .then((response)=>response.json())\r\n        .then((data)=>setAll_Product(data))\r\n\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:4000/getcart',{\r\n                method:'POST',\r\n                headers:{\r\n                    Accept:'application/form-data',\r\n                    'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body:\"\",\r\n            }).then((response)=>response.json())\r\n            .then((data)=>setCartItems(data));\r\n        }\r\n    },[])\r\n    \r\n    //console.log(cartItems);\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n        //console.log(cartItems); bỏ console đi thay bằng\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:4000/addtocart',{\r\n                method:'POST',\r\n                headers:{\r\n                    Accept:'application/form-data',\r\n                    'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body:JSON.stringify({\"itemId\":itemId}),\r\n            })\r\n            .then((response)=>response.json())\r\n            .then((data)=>console.log(data));\r\n        }\r\n    }\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: Math.max(prev[itemId] - 1, 0) }));\r\n        if(localStorage.getItem('auth-token')){ //kết nối với database backend\r\n            fetch('http://localhost:4000/removefromcart',{\r\n                method:'POST',\r\n                headers:{\r\n                    Accept:'application/form-data',\r\n                    'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body:JSON.stringify({\"itemId\":itemId}),\r\n            })\r\n            .then((response)=>response.json())\r\n            .then((data)=>console.log(data));\r\n        }\r\n    }\r\n    {/*tính tổng giá các sản phẩm trong giỏ hàng */}\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in cartItems) {\r\n            if(cartItems[item] > 0)\r\n            {\r\n                let itemInfo = all_product.find((product)=>product.id===Number(item))\r\n                totalAmount += itemInfo.new_price * cartItems[item];\r\n            }   \r\n        }\r\n        return totalAmount;\r\n    }\r\n    {/*hiển thị số sản phẩm trên biểu tượng giỏ hàng */}\r\n    const getTotalCartItems = () => {\r\n        let totalItem = 0;\r\n        for(const item in cartItems){\r\n            if(cartItems[item] > 0)\r\n            {\r\n                totalItem += cartItems[item];\r\n            }\r\n            \r\n        }\r\n        return totalItem;\r\n    }\r\n    \r\n\r\n    const contextValue = {getTotalCartItems,getTotalCartAmount,all_product,cartItems,addToCart,removeFromCart,username,};\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ShopContextProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\OOAD\\\\fontend\\\\src\\\\Components\\\\language-selector.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languages = [{\n  code: \"vi\",\n  lang: \"Tiếng Việt\"\n},\n// Use \"Tiếng Việt\" for a more natural Vietnamese translation\n{\n  code: \"en\",\n  lang: \"English\"\n}];\nconst LanguageSelector = () => {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    document.body.dir = i18n.dir();\n  }, [i18n, i18n.language]);\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: languages.map(lng => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `language-button ${lng.code === i18n.language ? \"active\" : \"\"}` // Consistent class naming\n          ,\n          onClick: () => changeLanguage(lng.code),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"language-flag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"language-name\",\n            children: lng.lang\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, lng.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageSelector, \"XIFq83ieJr2IDBjDrSkk+Qj6jto=\", false, function () {\n  return [useTranslation];\n});\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["useEffect","useTranslation","jsxDEV","_jsxDEV","languages","code","lang","LanguageSelector","_s","i18n","document","body","dir","language","changeLanguage","lng","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/OOAD/fontend/src/Components/language-selector.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst languages = [\r\n  { code: \"vi\", lang: \"Tiếng Việt\" },  // Use \"Tiếng Việt\" for a more natural Vietnamese translation\r\n  { code: \"en\", lang: \"English\" },\r\n];\r\n\r\nconst LanguageSelector = () => {\r\n  const { i18n } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    document.body.dir = i18n.dir();\r\n  }, [i18n, i18n.language]);\r\n\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n\r\n  return (\r\n    <div className=\"language-selector\">  \r\n      <ul>\r\n        {languages.map((lng) => (\r\n          <li key={lng.code}>\r\n            <button\r\n              className={`language-button ${\r\n                lng.code === i18n.language ? \"active\" : \"\"\r\n              }`}  // Consistent class naming\r\n              onClick={() => changeLanguage(lng.code)}\r\n            >\r\n              <span className=\"language-flag\"> \r\n                {/* Add flag icons for each language using appropriate libraries or inline styles */}\r\n              </span>\r\n              <span className=\"language-name\">{lng.lang}</span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAG,CAChB;EAAEC,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAa,CAAC;AAAG;AACrC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,CAChC;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAK,CAAC,GAAGR,cAAc,CAAC,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACC,IAAI,CAACC,GAAG,GAAGH,IAAI,CAACG,GAAG,CAAC,CAAC;EAChC,CAAC,EAAE,CAACH,IAAI,EAAEA,IAAI,CAACI,QAAQ,CAAC,CAAC;EAEzB,MAAMC,cAAc,GAAIC,GAAG,IAAK;IAC9BN,IAAI,CAACK,cAAc,CAACC,GAAG,CAAC;EAC1B,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCd,OAAA;MAAAc,QAAA,EACGb,SAAS,CAACc,GAAG,CAAEH,GAAG,iBACjBZ,OAAA;QAAAc,QAAA,eACEd,OAAA;UACEa,SAAS,EAAG,mBACVD,GAAG,CAACV,IAAI,KAAKI,IAAI,CAACI,QAAQ,GAAG,QAAQ,GAAG,EACzC,EAAE,CAAE;UAAA;UACLM,OAAO,EAAEA,CAAA,KAAML,cAAc,CAACC,GAAG,CAACV,IAAI,CAAE;UAAAY,QAAA,gBAExCd,OAAA;YAAMa,SAAS,EAAC;UAAe;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEzB,CAAC,eACPpB,OAAA;YAAMa,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEF,GAAG,CAACT;UAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC,GAXFR,GAAG,CAACV,IAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAhCID,gBAAgB;EAAA,QACHN,cAAc;AAAA;AAAAuB,EAAA,GAD3BjB,gBAAgB;AAkCtB,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
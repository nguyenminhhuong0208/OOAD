{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\ML_Scientist\\\\Thuc_hanh_phat_trien_AI\\\\OOAD_19_5\\\\OOAD\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\n// import React, { createContext, useEffect, useState } from 'react';\n// //import all_product from \"../Components/Assets/all_product\";\n// //import CartItems from '../Components/CartItems/CartItems';\n\n// import axios from 'axios';\n// export const ShopContext = createContext(null);\n// const getDefaultCart = ()=>{\n//     let cart = {};\n//     for (let index = 0; index < 300+1; index++) { //đổi all_product.length thành 300\n//         cart[index] = 0;\n//     }\n//     return cart;\n// }\n// const ShopContextProvider = (props)=>{\n//     const [all_product,setAll_Product]= useState([]);\n//     // can access cartItems data in any component\n//     const [cartItems,setCartItems] = useState(getDefaultCart());\n//     const [username, setUsername] = useState(\"\"); // State để lưu trữ tên người dùng\n//     useEffect(() => {\n//         // Gọi API để lấy thông tin người dùng từ cơ sở dữ liệu\n//         async function fetchUserData() {\n//             try {\n//                 const response = await axios.get('http://localhost:4000/user'); // Đổi '/api/user' thành endpoint của bạn\n//                 setUsername(response.data.username);\n//             } catch (error) {\n//                 console.error('Error fetching user data:', error);\n//                 // Xử lý lỗi tại đây\n//             }\n//         }\n\n//         fetchUserData(); // Gọi hàm để lấy thông tin người dùng khi component được render\n\n//     }, []); // Chạy một lần khi component được render\n\n//     useEffect(()=>{\n//         fetch('http://localhost:4000/allproducts') //load product từ backend\n//         .then((response)=>response.json())\n//         .then((data)=>setAll_Product(data))\n\n//         if(localStorage.getItem('auth-token')){\n//             fetch('http://localhost:4000/getcart',{\n//                 method:'POST',\n//                 headers:{\n//                     Accept:'application/form-data',\n//                     'auth-token':`${localStorage.getItem('auth-token')}`,\n//                     'Content-Type':'application/json',\n//                 },\n//                 body:\"\",\n//             }).then((response)=>response.json())\n//             .then((data)=>setCartItems(data));\n//         }\n//     },[])\n\n//     //console.log(cartItems);\n//     const addToCart = (itemId) => {\n//         setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\n//         //console.log(cartItems); bỏ console đi thay bằng\n//         if(localStorage.getItem('auth-token')){\n//             fetch('http://localhost:4000/addtocart',{\n//                 method:'POST',\n//                 headers:{\n//                     Accept:'application/form-data',\n//                     'auth-token':`${localStorage.getItem('auth-token')}`,\n//                     'Content-Type':'application/json',\n//                 },\n//                 body:JSON.stringify({\"itemId\":itemId}),\n//             })\n//             .then((response)=>response.json())\n//             .then((data)=>console.log(data));\n//         }\n//     }\n//     const removeFromCart = (itemId) => {\n//         setCartItems((prev) => ({ ...prev, [itemId]: Math.max(prev[itemId] - 1, 0) }));\n//         if(localStorage.getItem('auth-token')){ //kết nối với database backend\n//             fetch('http://localhost:4000/removefromcart',{\n//                 method:'POST',\n//                 headers:{\n//                     Accept:'application/form-data',\n//                     'auth-token':`${localStorage.getItem('auth-token')}`,\n//                     'Content-Type':'application/json',\n//                 },\n//                 body:JSON.stringify({\"itemId\":itemId}),\n//             })\n//             .then((response)=>response.json())\n//             .then((data)=>console.log(data));\n//         }\n//     }\n//     {/*tính tổng giá các sản phẩm trong giỏ hàng */}\n//     const getTotalCartAmount = () => {\n//         let totalAmount = 0;\n//         for (const item in cartItems) {\n//             if(cartItems[item] > 0)\n//             {\n//                 let itemInfo = all_product.find((product)=>product.id===Number(item))\n//                 totalAmount += itemInfo.new_price * cartItems[item];\n//             }   \n//         }\n//         return totalAmount;\n//     }\n//     {/*hiển thị số sản phẩm trên biểu tượng giỏ hàng */}\n//     const getTotalCartItems = () => {\n//         let totalItem = 0;\n//         for(const item in cartItems){\n//             if(cartItems[item] > 0)\n//             {\n//                 totalItem += cartItems[item];\n//             }\n\n//         }\n//         return totalItem;\n//     }\n\n//     const contextValue = {getTotalCartItems,getTotalCartAmount,all_product,cartItems,addToCart,removeFromCart,username};\n\n//     return (\n//         <ShopContext.Provider value={contextValue}>\n//             {props.children}\n//         </ShopContext.Provider>\n//     )\n// }\n\n// export default ShopContextProvider;\nimport React, { createContext, useEffect, useState } from 'react';\n//import all_product from \"../Components/Assets/all_product\";\n//import CartItems from '../Components/CartItems/CartItems';\nimport axios from 'axios';\n// const jwt = require('jsonwebtoken');\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    //đổi all_product.length thành 300\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  // can access cartItems data in any component\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [username, setUsername] = useState(\"\"); // State để lưu trữ tên người dùng\n\n  // useEffect(()=>{\n  //     // Các thao tác khác trong useEffect\n\n  //     // Lấy tên người dùng từ localStorage sau khi đăng nhập thành công\n  //     const token = localStorage.getItem('auth-token');\n  //     if (token) {\n  //         const decodedToken = jwt.decode(token);\n  //         if (decodedToken && decodedToken.user && decodedToken.user.name) {\n  //             setUsername(decodedToken.user.name);\n  //         }\n  //     }\n  // }, []);\n  useEffect(() => {\n    // Gọi API để lấy thông tin người dùng từ cơ sở dữ liệu\n    async function fetchUserData() {\n      try {\n        const response = await axios.get('http://localhost:4000/user'); // Đổi '/api/user' thành endpoint của bạn\n        setUsername(response.data.username);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        // Xử lý lỗi tại đây\n      }\n    }\n    fetchUserData(); // Gọi hàm để lấy thông tin người dùng khi component được render\n  }, []); // Chạy một lần khi component được render\n\n  useEffect(() => {\n    fetch('http://localhost:4000/allproducts') //load product từ backend\n    .then(response => response.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setCartItems(data));\n    }\n  }, []);\n\n  //console.log(cartItems);\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1\n    }));\n    const authToken = localStorage.getItem('auth-token');\n    if (authToken) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          // Changed to 'application/json'\n          'auth-token': authToken,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          itemId\n        })\n      }).then(response => {\n        if (!response.ok) {\n          return response.text().then(text => {\n            throw new Error(text);\n          });\n        }\n        return response.json();\n      }).then(data => {\n        console.log('Item added to cart:', data);\n      }).catch(error => {\n        console.error('Error adding item to cart:', error);\n      });\n    } else {\n      console.error('No auth-token found in localStorage');\n    }\n  };\n  // const addToCart = (itemId) => {\n  //     setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\n  //     //console.log(cartItems); bỏ console đi thay bằng\n  //     if(localStorage.getItem('auth-token')){\n  //         fetch('http://localhost:4000/addtocart',{\n  //             method:'POST',\n  //             headers:{\n  //                 Accept:'application/form-data',\n  //                 'auth-token':`${localStorage.getItem('auth-token')}`,\n  //                 'Content-Type':'application/json',\n  //             },\n  //             body:JSON.stringify({\"itemId\":itemId}),\n  //         })\n  //         .then((response)=>response.json())\n  //         .then((data)=>console.log(data));\n  //     }\n  // }\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: Math.max(prev[itemId] - 1, 0)\n    }));\n    if (localStorage.getItem('auth-token')) {\n      //kết nối với database backend\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  {/*tính tổng giá các sản phẩm trong giỏ hàng */}\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  {/*hiển thị số sản phẩm trên biểu tượng giỏ hàng */}\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    username\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"VJNw+EpZVv4Lc7TENfvMI/U4wgg=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","username","setUsername","fetchUserData","response","get","data","error","console","fetch","then","json","localStorage","getItem","method","headers","Accept","body","addToCart","itemId","prev","authToken","JSON","stringify","ok","text","Error","log","catch","removeFromCart","Math","max","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/ML_Scientist/Thuc_hanh_phat_trien_AI/OOAD_19_5/OOAD/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["// import React, { createContext, useEffect, useState } from 'react';\r\n// //import all_product from \"../Components/Assets/all_product\";\r\n// //import CartItems from '../Components/CartItems/CartItems';\r\n\r\n// import axios from 'axios';\r\n// export const ShopContext = createContext(null);\r\n// const getDefaultCart = ()=>{\r\n//     let cart = {};\r\n//     for (let index = 0; index < 300+1; index++) { //đổi all_product.length thành 300\r\n//         cart[index] = 0;\r\n//     }\r\n//     return cart;\r\n// }\r\n// const ShopContextProvider = (props)=>{\r\n//     const [all_product,setAll_Product]= useState([]);\r\n//     // can access cartItems data in any component\r\n//     const [cartItems,setCartItems] = useState(getDefaultCart());\r\n//     const [username, setUsername] = useState(\"\"); // State để lưu trữ tên người dùng\r\n//     useEffect(() => {\r\n//         // Gọi API để lấy thông tin người dùng từ cơ sở dữ liệu\r\n//         async function fetchUserData() {\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:4000/user'); // Đổi '/api/user' thành endpoint của bạn\r\n//                 setUsername(response.data.username);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching user data:', error);\r\n//                 // Xử lý lỗi tại đây\r\n//             }\r\n//         }\r\n\r\n//         fetchUserData(); // Gọi hàm để lấy thông tin người dùng khi component được render\r\n\r\n//     }, []); // Chạy một lần khi component được render\r\n\r\n\r\n\r\n//     useEffect(()=>{\r\n//         fetch('http://localhost:4000/allproducts') //load product từ backend\r\n//         .then((response)=>response.json())\r\n//         .then((data)=>setAll_Product(data))\r\n\r\n//         if(localStorage.getItem('auth-token')){\r\n//             fetch('http://localhost:4000/getcart',{\r\n//                 method:'POST',\r\n//                 headers:{\r\n//                     Accept:'application/form-data',\r\n//                     'auth-token':`${localStorage.getItem('auth-token')}`,\r\n//                     'Content-Type':'application/json',\r\n//                 },\r\n//                 body:\"\",\r\n//             }).then((response)=>response.json())\r\n//             .then((data)=>setCartItems(data));\r\n//         }\r\n//     },[])\r\n    \r\n//     //console.log(cartItems);\r\n//     const addToCart = (itemId) => {\r\n//         setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n//         //console.log(cartItems); bỏ console đi thay bằng\r\n//         if(localStorage.getItem('auth-token')){\r\n//             fetch('http://localhost:4000/addtocart',{\r\n//                 method:'POST',\r\n//                 headers:{\r\n//                     Accept:'application/form-data',\r\n//                     'auth-token':`${localStorage.getItem('auth-token')}`,\r\n//                     'Content-Type':'application/json',\r\n//                 },\r\n//                 body:JSON.stringify({\"itemId\":itemId}),\r\n//             })\r\n//             .then((response)=>response.json())\r\n//             .then((data)=>console.log(data));\r\n//         }\r\n//     }\r\n//     const removeFromCart = (itemId) => {\r\n//         setCartItems((prev) => ({ ...prev, [itemId]: Math.max(prev[itemId] - 1, 0) }));\r\n//         if(localStorage.getItem('auth-token')){ //kết nối với database backend\r\n//             fetch('http://localhost:4000/removefromcart',{\r\n//                 method:'POST',\r\n//                 headers:{\r\n//                     Accept:'application/form-data',\r\n//                     'auth-token':`${localStorage.getItem('auth-token')}`,\r\n//                     'Content-Type':'application/json',\r\n//                 },\r\n//                 body:JSON.stringify({\"itemId\":itemId}),\r\n//             })\r\n//             .then((response)=>response.json())\r\n//             .then((data)=>console.log(data));\r\n//         }\r\n//     }\r\n//     {/*tính tổng giá các sản phẩm trong giỏ hàng */}\r\n//     const getTotalCartAmount = () => {\r\n//         let totalAmount = 0;\r\n//         for (const item in cartItems) {\r\n//             if(cartItems[item] > 0)\r\n//             {\r\n//                 let itemInfo = all_product.find((product)=>product.id===Number(item))\r\n//                 totalAmount += itemInfo.new_price * cartItems[item];\r\n//             }   \r\n//         }\r\n//         return totalAmount;\r\n//     }\r\n//     {/*hiển thị số sản phẩm trên biểu tượng giỏ hàng */}\r\n//     const getTotalCartItems = () => {\r\n//         let totalItem = 0;\r\n//         for(const item in cartItems){\r\n//             if(cartItems[item] > 0)\r\n//             {\r\n//                 totalItem += cartItems[item];\r\n//             }\r\n            \r\n//         }\r\n//         return totalItem;\r\n//     }\r\n\r\n//     const contextValue = {getTotalCartItems,getTotalCartAmount,all_product,cartItems,addToCart,removeFromCart,username};\r\n\r\n//     return (\r\n//         <ShopContext.Provider value={contextValue}>\r\n//             {props.children}\r\n//         </ShopContext.Provider>\r\n//     )\r\n// }\r\n\r\n// export default ShopContextProvider;\r\nimport React, { createContext, useEffect, useState } from 'react';\r\n//import all_product from \"../Components/Assets/all_product\";\r\n//import CartItems from '../Components/CartItems/CartItems';\r\nimport axios from 'axios';\r\n// const jwt = require('jsonwebtoken');\r\n\r\nexport const ShopContext = createContext(null);\r\nconst getDefaultCart = ()=>{\r\n    let cart = {};\r\n    for (let index = 0; index < 300+1; index++) { //đổi all_product.length thành 300\r\n        cart[index] = 0;\r\n    }\r\n    return cart;\r\n}\r\nconst ShopContextProvider = (props)=>{\r\n    const [all_product,setAll_Product]= useState([]);\r\n    // can access cartItems data in any component\r\n    const [cartItems,setCartItems] = useState(getDefaultCart());\r\n    const [username, setUsername] = useState(\"\"); // State để lưu trữ tên người dùng\r\n\r\n    // useEffect(()=>{\r\n    //     // Các thao tác khác trong useEffect\r\n        \r\n    //     // Lấy tên người dùng từ localStorage sau khi đăng nhập thành công\r\n    //     const token = localStorage.getItem('auth-token');\r\n    //     if (token) {\r\n    //         const decodedToken = jwt.decode(token);\r\n    //         if (decodedToken && decodedToken.user && decodedToken.user.name) {\r\n    //             setUsername(decodedToken.user.name);\r\n    //         }\r\n    //     }\r\n    // }, []);\r\n    useEffect(() => {\r\n        // Gọi API để lấy thông tin người dùng từ cơ sở dữ liệu\r\n        async function fetchUserData() {\r\n            try {\r\n                const response = await axios.get('http://localhost:4000/user'); // Đổi '/api/user' thành endpoint của bạn\r\n                setUsername(response.data.username);\r\n            } catch (error) {\r\n                console.error('Error fetching user data:', error);\r\n                // Xử lý lỗi tại đây\r\n            }\r\n        }\r\n\r\n        fetchUserData(); // Gọi hàm để lấy thông tin người dùng khi component được render\r\n\r\n    }, []); // Chạy một lần khi component được render\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:4000/allproducts') //load product từ backend\r\n        .then((response)=>response.json())\r\n        .then((data)=>setAll_Product(data))\r\n\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:4000/getcart',{\r\n                method:'POST',\r\n                headers:{\r\n                    Accept:'application/form-data',\r\n                    'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body:\"\",\r\n            }).then((response)=>response.json())\r\n            .then((data)=>setCartItems(data));\r\n        }\r\n    },[])\r\n    \r\n    //console.log(cartItems);\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ \r\n            ...prev, \r\n            [itemId]: (prev[itemId] || 0) + 1 \r\n        }));\r\n    \r\n        const authToken = localStorage.getItem('auth-token');\r\n        if (authToken) {\r\n            fetch('http://localhost:4000/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json', // Changed to 'application/json'\r\n                    'auth-token': authToken,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ itemId }),\r\n            })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    return response.text().then(text => { throw new Error(text) });\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                console.log('Item added to cart:', data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error adding item to cart:', error);\r\n            });\r\n        } else {\r\n            console.error('No auth-token found in localStorage');\r\n        }\r\n    };\r\n    // const addToCart = (itemId) => {\r\n    //     setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    //     //console.log(cartItems); bỏ console đi thay bằng\r\n    //     if(localStorage.getItem('auth-token')){\r\n    //         fetch('http://localhost:4000/addtocart',{\r\n    //             method:'POST',\r\n    //             headers:{\r\n    //                 Accept:'application/form-data',\r\n    //                 'auth-token':`${localStorage.getItem('auth-token')}`,\r\n    //                 'Content-Type':'application/json',\r\n    //             },\r\n    //             body:JSON.stringify({\"itemId\":itemId}),\r\n    //         })\r\n    //         .then((response)=>response.json())\r\n    //         .then((data)=>console.log(data));\r\n    //     }\r\n    // }\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: Math.max(prev[itemId] - 1, 0) }));\r\n        if(localStorage.getItem('auth-token')){ //kết nối với database backend\r\n            fetch('http://localhost:4000/removefromcart',{\r\n                method:'POST',\r\n                headers:{\r\n                    Accept:'application/form-data',\r\n                    'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                    'Content-Type':'application/json',\r\n                },\r\n                body:JSON.stringify({\"itemId\":itemId}),\r\n            })\r\n            .then((response)=>response.json())\r\n            .then((data)=>console.log(data));\r\n        }\r\n    }\r\n    {/*tính tổng giá các sản phẩm trong giỏ hàng */}\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in cartItems) {\r\n            if(cartItems[item] > 0)\r\n            {\r\n                let itemInfo = all_product.find((product)=>product.id===Number(item))\r\n                totalAmount += itemInfo.new_price * cartItems[item];\r\n            }   \r\n        }\r\n        return totalAmount;\r\n    }\r\n    {/*hiển thị số sản phẩm trên biểu tượng giỏ hàng */}\r\n    const getTotalCartItems = () => {\r\n        let totalItem = 0;\r\n        for(const item in cartItems){\r\n            if(cartItems[item] > 0)\r\n            {\r\n                totalItem += cartItems[item];\r\n            }\r\n            \r\n        }\r\n        return totalItem;\r\n    }\r\n    \r\n\r\n    const contextValue = {getTotalCartItems,getTotalCartAmount,all_product,cartItems,addToCart,removeFromCart,username};\r\n    return (\r\n        <ShopContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ShopContextProvider;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE;AACA;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAC9C,MAAMO,cAAc,GAAGA,CAAA,KAAI;EACvB,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,GAAG,GAAC,CAAC,EAAEA,KAAK,EAAE,EAAE;IAAE;IAC1CD,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EACnB;EACA,OAAOD,IAAI;AACf,CAAC;AACD,MAAME,mBAAmB,GAAIC,KAAK,IAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAEZ,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,MAAM,CAACa,SAAS,EAACC,YAAY,CAAC,GAAGd,QAAQ,CAACK,cAAc,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,G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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"const arr = [];\nconst each = arr.forEach;\nconst slice = arr.slice;\nexport function defaults(obj) {\n  each.call(slice.call(arguments, 1), source => {\n    if (source) {\n      for (const prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\nexport function hasXMLHttpRequest() {\n  return typeof XMLHttpRequest === 'function' || typeof XMLHttpRequest === 'object';\n}\n\n/**\n * Determine whether the given `maybePromise` is a Promise.\n *\n * @param {*} maybePromise\n *\n * @returns {Boolean}\n */\nfunction isPromise(maybePromise) {\n  return !!maybePromise && typeof maybePromise.then === 'function';\n}\n\n/**\n * Convert any value to a Promise than will resolve to this value.\n *\n * @param {*} maybePromise\n *\n * @returns {Promise}\n */\nexport function makePromise(maybePromise) {\n  if (isPromise(maybePromise)) {\n    return maybePromise;\n  }\n  return Promise.resolve(maybePromise);\n}","map":{"version":3,"names":["arr","each","forEach","slice","defaults","obj","call","arguments","source","prop","undefined","hasXMLHttpRequest","XMLHttpRequest","isPromise","maybePromise","then","makePromise","Promise","resolve"],"sources":["D:/Documents/GitHub/OOAD - Copy/fontend/node_modules/i18next-http-backend/lib/utils.js"],"sourcesContent":["const arr = []\nconst each = arr.forEach\nconst slice = arr.slice\n\nexport function defaults (obj) {\n  each.call(slice.call(arguments, 1), (source) => {\n    if (source) {\n      for (const prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop]\n      }\n    }\n  })\n  return obj\n}\n\nexport function hasXMLHttpRequest () {\n  return (typeof XMLHttpRequest === 'function' || typeof XMLHttpRequest === 'object')\n}\n\n/**\n * Determine whether the given `maybePromise` is a Promise.\n *\n * @param {*} maybePromise\n *\n * @returns {Boolean}\n */\nfunction isPromise (maybePromise) {\n  return !!maybePromise && typeof maybePromise.then === 'function'\n}\n\n/**\n * Convert any value to a Promise than will resolve to this value.\n *\n * @param {*} maybePromise\n *\n * @returns {Promise}\n */\nexport function makePromise (maybePromise) {\n  if (isPromise(maybePromise)) {\n    return maybePromise\n  }\n\n  return Promise.resolve(maybePromise)\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG,EAAE;AACd,MAAMC,IAAI,GAAGD,GAAG,CAACE,OAAO;AACxB,MAAMC,KAAK,GAAGH,GAAG,CAACG,KAAK;AAEvB,OAAO,SAASC,QAAQA,CAAEC,GAAG,EAAE;EAC7BJ,IAAI,CAACK,IAAI,CAACH,KAAK,CAACG,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC,EAAGC,MAAM,IAAK;IAC9C,IAAIA,MAAM,EAAE;MACV,KAAK,MAAMC,IAAI,IAAID,MAAM,EAAE;QACzB,IAAIH,GAAG,CAACI,IAAI,CAAC,KAAKC,SAAS,EAAEL,GAAG,CAACI,IAAI,CAAC,GAAGD,MAAM,CAACC,IAAI,CAAC;MACvD;IACF;EACF,CAAC,CAAC;EACF,OAAOJ,GAAG;AACZ;AAEA,OAAO,SAASM,iBAAiBA,CAAA,EAAI;EACnC,OAAQ,OAAOC,cAAc,KAAK,UAAU,IAAI,OAAOA,cAAc,KAAK,QAAQ;AACpF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAAEC,YAAY,EAAE;EAChC,OAAO,CAAC,CAACA,YAAY,IAAI,OAAOA,YAAY,CAACC,IAAI,KAAK,UAAU;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAAEF,YAAY,EAAE;EACzC,IAAID,SAAS,CAACC,YAAY,CAAC,EAAE;IAC3B,OAAOA,YAAY;EACrB;EAEA,OAAOG,OAAO,CAACC,OAAO,CAACJ,YAAY,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}